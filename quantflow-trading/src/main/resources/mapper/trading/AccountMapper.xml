<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.quantflow.trading.account.mapper.AccountMapper">
    
    <resultMap type="Account" id="AccountResult">
        <result property="id"    column="id"    />
        <result property="userId"    column="user_id"    />
        <result property="accountName"    column="account_name"    />
        <result property="exchange"    column="exchange"    />
        <result property="apiKey"    column="api_key"    />
        <result property="apiSecret"    column="api_secret"    />
        <result property="passphrase"    column="passphrase"    />
        <result property="isTestnet"    column="is_testnet"    />
        <result property="status"    column="status"    />
        <result property="createBy"    column="create_by"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateBy"    column="update_by"    />
        <result property="updateTime"    column="update_time"    />
        <result property="remark"    column="remark"    />
    </resultMap>

    <sql id="selectAccountVo">
        select id, user_id, account_name, exchange, api_key, api_secret, passphrase, is_testnet, status, create_by, create_time, update_by, update_time, remark from qf_account
    </sql>

    <select id="selectAccountList" parameterType="Account" resultMap="AccountResult">
        <include refid="selectAccountVo"/>
        <where>  
            <if test="userId != null "> and user_id = #{userId}</if>
            <if test="accountName != null  and accountName != ''"> and account_name like concat('%', #{accountName}, '%')</if>
            <if test="exchange != null  and exchange != ''"> and exchange = #{exchange}</if>
            <if test="isTestnet != null "> and is_testnet = #{isTestnet}</if>
            <if test="status != null "> and status = #{status}</if>
        </where>
    </select>
    
    <select id="selectAccountById" parameterType="Long" resultMap="AccountResult">
        <include refid="selectAccountVo"/>
        where id = #{id}
    </select>

    <insert id="insertAccount" parameterType="Account" useGeneratedKeys="true" keyProperty="id">
        insert into qf_account
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="userId != null">user_id,</if>
            <if test="accountName != null and accountName != ''">account_name,</if>
            <if test="exchange != null and exchange != ''">exchange,</if>
            <if test="apiKey != null and apiKey != ''">api_key,</if>
            <if test="apiSecret != null">api_secret,</if>
            <if test="passphrase != null">passphrase,</if>
            <if test="isTestnet != null">is_testnet,</if>
            <if test="status != null">status,</if>
            <if test="createBy != null">create_by,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateBy != null">update_by,</if>
            <if test="updateTime != null">update_time,</if>
            <if test="remark != null">remark,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="userId != null">#{userId},</if>
            <if test="accountName != null and accountName != ''">#{accountName},</if>
            <if test="exchange != null and exchange != ''">#{exchange},</if>
            <if test="apiKey != null and apiKey != ''">#{apiKey},</if>
            <if test="apiSecret != null">#{apiSecret},</if>
            <if test="passphrase != null">#{passphrase},</if>
            <if test="isTestnet != null">#{isTestnet},</if>
            <if test="status != null">#{status},</if>
            <if test="createBy != null">#{createBy},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateBy != null">#{updateBy},</if>
            <if test="updateTime != null">#{updateTime},</if>
            <if test="remark != null">#{remark},</if>
         </trim>
    </insert>

    <update id="updateAccount" parameterType="Account">
        update qf_account
        <trim prefix="SET" suffixOverrides=",">
            <if test="userId != null">user_id = #{userId},</if>
            <if test="accountName != null and accountName != ''">account_name = #{accountName},</if>
            <if test="exchange != null and exchange != ''">exchange = #{exchange},</if>
            <if test="apiKey != null and apiKey != ''">api_key = #{apiKey},</if>
            <if test="apiSecret != null">api_secret = #{apiSecret},</if>
            <if test="passphrase != null">passphrase = #{passphrase},</if>
            <if test="isTestnet != null">is_testnet = #{isTestnet},</if>
            <if test="status != null">status = #{status},</if>
            <if test="createBy != null">create_by = #{createBy},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateBy != null">update_by = #{updateBy},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
            <if test="remark != null">remark = #{remark},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteAccountById" parameterType="Long">
        delete from qf_account where id = #{id}
    </delete>

    <delete id="deleteAccountByIds" parameterType="String">
        delete from qf_account where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
</mapper>